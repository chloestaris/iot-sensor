name: iot-sensor

services:
  api:
    build: .
    container_name: iot-sensor-api
    ports:
      - "${WEBSOCKET_PORT:-9002}:9002"
    environment:
      - WEBSOCKET_PORT=${WEBSOCKET_PORT:-9002}
      - MAX_CONNECTIONS=${MAX_CONNECTIONS:-1000}
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-100}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-60}
      - DOS_MAX_CONNECTIONS=${DOS_MAX_CONNECTIONS:-50}
      - DOS_WINDOW=${DOS_WINDOW:-60}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-iot_sensors}
      - POSTGRES_USER=${POSTGRES_USER:-iot_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-development_password}
      - VALID_API_KEYS=${VALID_API_KEYS:-test-api-key-12345678901234567890123456789012,admin-api-key-12345678901234567890123456789012}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - ./logs:/var/log/iot-sensor
    depends_on:
      - postgres
    restart: unless-stopped
    command: >
      bash -c "
        echo 'Environment variables:' &&
        echo VALID_API_KEYS=$$VALID_API_KEYS &&
        ./build/iot_sensor_api
      "

  postgres:
    image: postgres:14-alpine
    container_name: iot-sensor-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-iot_sensors}
      - POSTGRES_USER=${POSTGRES_USER:-iot_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-development_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    restart: unless-stopped

volumes:
  postgres_data: 